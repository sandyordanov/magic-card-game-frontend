/* Responsive Design */
.game-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100vh;
    padding: 10px;
    background-image: url(/src/assets/gameBg.jpg);
    background-size: cover;
    background-repeat: no-repeat;
}

.player-data {
    position: absolute;
    padding: 10px;
    color: white;
    background-color: darkslategray;
    border: 1px solid #ddd;
    border-radius: 5px;
}
.health-bar {
    width: 100%;
    background-color: #ddd;
    border-radius: 4px;
    overflow: hidden;
    height: 20px; /* Adjust the height as needed */
    position: relative; /* Add this */
    margin-bottom: 10px;
}

.health-bar-inner {
    height: 100%;
    background-color: #4caf50; /* Green color for the health */
    transition: width 0.3s ease-in-out;
}

.health-bar-text {
    color: black;
    position: absolute; /* Add this */
    top: 50%; /* Add this */
    left: 50%; /* Add this */
    transform: translate(-50%, -50%); /* Add this */
    width: 100%; /* Add this to ensure text is centered properly */
    pointer-events: none; /* Optional: allows clicks to pass through text */
}

.player-data.left {
    top: 10px;
    left: 10px;
}

.player-data.right {
    top: 10px;
    right: 10px;
}

.card {
    width: 100%;
    height: auto;
    max-width: 100%;
}

.facedown-card, .opponent-played-card, .played-card {
    position: absolute;
    width: 20vw; /* Adjusting the width with viewport units */
    height: auto;
    max-width: 200px; /* Ensure it doesn't get too large */
    max-height: 275px; /* Ensure it doesn't get too large */
    transition: opacity 0.5s;
}

.facedown-card {
    right: 20%;
    top: 50%;
    height: 40vw;
    transform: translateY(-50%);
    background-color: gray;
    border: 2px solid black;
    border-radius: 5px;
    opacity: 1;
}

.opponent-played-card {
    right: 20%;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 5px;
    opacity: 1;
}

.played-card {
    left: 20%;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 5px;
    opacity: 1;
}

.player-hand {
    padding: 20px;
    position: relative;
}

.card-container {
    margin: 10px;
    transform: scale(1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    padding-right: 1.0pc;
    cursor: pointer;
}
.card-container:hover {
    transform: scale(1.05);
}

.selected-card {
    transform: scale(1.1);
}

@media (max-width: 768px) {
    .facedown-card, .opponent-played-card, .played-card {
        width: 22vw; /* Increase width for smaller screens */
        height: 30vw;
    }

    .card-container {
        margin: 0;
        width: 18vw; /* Decrease the width for smaller screens */

    }

    .play-button, .cancel-button {
        font-size: 14px;
    }
}

@media (max-width: 480px) {
    .facedown-card, .opponent-played-card, .played-card {
        width: 40vw; /* Further increase width for even smaller screens */
    }

    .card-container {
        width: 30vw; /* Further decrease the width for smaller screens */
    }

    .play-button, .cancel-button {
        font-size: 12px;
    }

    .player-data {
        font-size: 14px;
        padding: 5px;
    }
}
.attack-animation,.reverse-attack-animation{
    background: darkorange;
}
.health-animation,.reverse-health-animation {
    background: royalblue;
}
/* Initial setup for animation elements */
.attack-animation,
.health-animation,
.reverse-attack-animation,
.reverse-health-animation {
    border-radius: 5px;
    position: absolute;
    font-size: 24px;
    font-weight: bold;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

/* Animation for attack and health points moving downwards */
@keyframes moveDown {
    0% {
        opacity: 0;
        transform: translateY(0) ;
    }
    100% {
        opacity: 1;
        transform: translateY(50px); /* Adjust this value as needed */
    }
}

/* Animation for attack and health points moving horizontally towards each other */
@keyframes moveHorizontally {
    0% {
        transform: translateX(0) translateY(50px);
        opacity: 0;
    }
    100% {
        transform: translateX(33vw) translateY(50px); /* Move towards the center */
        opacity: 1;
    }
}
@keyframes moveHorizontallyReverse {
    0% {
        transform: translateX(0) translateY(50px);
        opacity: 0;
    }
    100% {
        transform: translateX(-33vw) translateY(50px); /* Move towards the center */
        opacity: 1;
    }
}
/* Animation for elements hitting each other and returning */
@keyframes moveBack {
    0% {
        transform: translateX(30vw);
    }
    100% {
        transform: translateX(0);
    }
}

/* Applying the animations */
.animate-move-down {
    animation: moveDown 2s forwards;
}

.animate-move-horizontally {
    animation: moveHorizontally 1s forwards;

}
.animate-move-horizontally-reverse {
    animation: moveHorizontallyReverse 1s forwards;
}
.animate-move-back {
    animation: moveBack 1s forwards;
}

